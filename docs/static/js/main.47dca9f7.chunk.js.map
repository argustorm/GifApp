{"version":3,"sources":["helpers/getGifs.js","Components/Home/GridItemComponent.js","Components/Home/GridComponent.js","Components/Home/InputComponent.js","Pages/HomePage.js","reportWebVitals.js","index.js"],"names":["getGifs","category","a","fetch","request","json","data","gifs","map","element","id","title","url","images","original","GridItemComponent","image","className","alt","src","GridComponent","useState","setImages","useEffect","then","InputComponent","setCategory","text","setText","onSubmit","e","preventDefault","trim","length","type","placeholder","onChange","target","value","HomeComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uMAOaA,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACGC,MAAM,GAAD,OANd,iCAMc,oBAAwBF,EAAxB,kBAJjB,GAIiB,oBALf,qCAIO,cACbG,EADa,gBAEIA,EAAQC,OAFZ,uBAEXC,EAFW,EAEXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAQC,GACZC,MAAOF,EAAQE,MACfC,IAAKH,EAAQI,OAAOC,SAASF,QARlB,kBAYZL,GAZY,2CAAH,sDCOLQ,EAZW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACI,sBAAKC,UAAU,gDAAf,UACI,qBACIC,IAAKF,EAAML,MACXQ,IAAKH,EAAMJ,MAEf,4BAAII,EAAML,YCuBPS,EA5BO,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAIRoB,mBAAS,IAJD,mBAI7BR,EAJ6B,KAIrBS,EAJqB,KAWpC,OALAC,qBAAU,WACNvB,EAAQC,GACCuB,MAAK,SAACjB,GAAD,OAAUe,EAAUf,QACnC,CAACN,IAGA,gCACI,6BAAKA,IACL,qBAAKgB,UAAU,gDAAf,SAEQJ,EAAOL,KAAI,SAAAQ,GACP,OAAO,cAAC,EAAD,CACHA,MAAOA,GACFA,EAAMN,aCUxBe,EA/BQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAEhBL,mBAAS,IAFO,mBAEjCM,EAFiC,KAE3BC,EAF2B,KAmBxC,OACI,sBAAMC,SAfa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAKK,OAAOC,OAAS,IACrBP,EAAYC,GACZC,EAAQ,MAUZ,SACI,uBACIM,KAAO,OACPC,YAAc,wBACdC,SATW,SAACN,GACpBF,EAAQE,EAAEO,OAAOC,QASTA,MAAUX,OCTXY,EAdO,WAAO,IAAD,EAEQlB,mBAAS,MAFjB,mBAEjBpB,EAFiB,KAEPyB,EAFO,KAIxB,OACI,gCACI,qDACA,cAAC,EAAD,CAAgBA,YAAaA,IAC7B,uBACA,cAAC,EAAD,CAAezB,SAAUA,QCDtBuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,SAK1DX,M","file":"static/js/main.47dca9f7.chunk.js","sourcesContent":["\r\n// Params Giphy API\r\nconst base_url = 'https://api.giphy.com/v1/gifs/';\r\nconst api_key = 'fJtmfyWZCBEQAbWLOzzMlqYwf6cY5Mux';\r\nconst limit = 10;\r\n\r\n// Request getGifs\r\nexport const getGifs = async (category) => {\r\n    const request = await fetch(`${base_url}search?q=${category}&limit=${limit}&api_key=${api_key}`);\r\n    const { data } = await request.json();\r\n\r\n    const gifs = data.map(element => {\r\n        return {\r\n            id: element.id,\r\n            title: element.title,\r\n            url: element.images.original.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GridItemComponent = ({ image }) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeftBig'>\r\n            <img\r\n                alt={image.title}\r\n                src={image.url}\r\n            />\r\n            <p>{image.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridItemComponent;","import React, { useEffect, useState } from 'react';\r\nimport { getGifs } from '../../helpers/getGifs';\r\nimport GridItemComponent from './GridItemComponent';\r\n\r\nconst GridComponent = ({ category }) => {\r\n\r\n    // HOOKS\r\n    /**************/\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n                .then((gifs) => setImages(gifs));\r\n    }, [category]);\r\n\r\n    return (\r\n        <div>\r\n            <h3>{category}</h3>\r\n            <div className='grid animate__animated animate__fadeInLeftBig'>\r\n                {\r\n                    images.map(image => {\r\n                        return <GridItemComponent\r\n                            image={image}\r\n                            key={image.id}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridComponent;","import React, { useState } from 'react';\r\n\r\nconst InputComponent = ({ setCategory }) => {\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n    // Handle Submit\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (text.trim().length > 2) {\r\n            setCategory(text);\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    // Handle Input\r\n    const handleOnChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleOnSubmit }>\r\n            <input \r\n                type = 'text'\r\n                placeholder = 'Escriba una categoria'\r\n                onChange = { handleOnChange }\r\n                value = { text }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputComponent;","import React, { useState } from 'react';\r\nimport GridComponent from '../Components/Home/GridComponent';\r\nimport InputComponent from '../Components/Home/InputComponent';\r\n\r\nconst HomeComponent = () => {\r\n\r\n    const [category, setCategory] = useState(null);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Repaso GifAppExpert</h1>\r\n            <InputComponent setCategory={setCategory} />\r\n            <hr />\r\n            <GridComponent category={category}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomeComponent from './Pages/HomePage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<HomeComponent />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}